{% extends 'base.html.twig' %}

{% block title %}
    {{ title }}
{% endblock %}

{% block breadcrumbs %}
    <li>
        <a href="{{ path('homepage') }}">Home</a>
        <i class="fa fa-circle"></i>
    </li>
    <li>
        <a href="{{ path('student_list') }}">Students</a>
        <i class="fa fa-circle"></i>
    </li>
    <li>
        <a href="{{ path('observation_student_list', { 'id': student.id }) }}">Observations</a>
        <i class="fa fa-circle"></i>
    </li>
    <li>
        <span>New</span>
    </li>
{% endblock %}

{% block stylesheets %}
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.8.0/css/bootstrap-datepicker.min.css">
    <link rel="stylesheet" href="{{ asset('theme/assets/global/plugins/ion.rangeslider/css/ion.rangeSlider.css') }}">
    <link rel="stylesheet" href="{{ asset('theme/assets/global/plugins/ion.rangeslider/css/ion.rangeSlider.skinFlat.css') }}">
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.8.0/js/bootstrap-datepicker.js"></script>
    <script src="{{ asset('theme/assets/global/plugins/ion.rangeslider/js/ion.rangeSlider.min.js') }}"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/moment-with-locales.min.js"></script>

    <script>
        $( "#observation_base_observation_observerUsername" ).autocomplete({
            source: "{{ path('user_search') }}",
            minLength: 2,
            select: function( event, ui ) {
                event.preventDefault();
                $('#observation_base_observation_observerUsername').val(jQuery(ui.item.label).text());
                $('#observation_base_observation_observerUserId').val(ui.item.value);
            },
            focus: function(event, ui) {
                event.preventDefault();
                $("#observation_base_observation_observerUsername").val(jQuery(ui.item.label).text());
            }
        }).data( "ui-autocomplete" )._renderItem = function( ul, item ) {
                return $( "<li>" )
                        .attr( "data-value", item.value )
                        .append(item.label).html(item.label)
                        .appendTo( ul );
            };


        $( document ).ready(function() {
            showHideScheduler();
            //showHideTime();
            showHideRepeatOptions();
            showHideRepeatEndOptions();

            isSingleCaseDesign = ($("#observation_edit_base_observation_isSingleCaseDesign").is(':checked')) ? true : false;

            $("#observation_base_observation_isSingleCaseDesign").bootstrapSwitch('state', isSingleCaseDesign);
            $("#observation_base_observation_isSingleCaseDesign").bootstrapSwitch('size', 'small');

            $('#observation_observationScheduler_hasDates').bootstrapSwitch();

            moment.locale("en-GB");

            var $range = $(".js-range-slider");
            var start = moment("2016-10-02 00:00", "YYYY-MM-DD HH:mm");
            var end = moment("2016-10-03 00:00", "YYYY-MM-DD HH:mm");

            $range.ionRangeSlider({
                type: "double",
                grid: true,
                min: start.format("x"),
                max: end.format("x"),
                step: 1800000,                // 30 minutes in ms
                prettify: function (num) {
                    return moment(num, 'x').format("h:mm A");
                },
                onChange: changeTimeRangeValues,
                onFinish: changeTimeRangeValues
            });

            function changeTimeRangeValues()
            {
                slider = $range.data("ionRangeSlider");

                fromHour = moment(slider.result.from).format('H');
                fromMinutes = moment(slider.result.from).format('mm');

                toHour = moment(slider.result.to).format('H');
                toMinutes = moment(slider.result.to).format('mm');

                if(slider.result.from == slider.result.to) {
                    $('#observation_observationScheduler_timeOption').val(2);
                    $('#observation_observationScheduler_exactTime_hour').val(fromHour);
                    $('#observation_observationScheduler_exactTime_minute').val(fromMinutes);
                } else {
                    $('#observation_observationScheduler_timeOption').val(1);
                    $('#observation_observationScheduler_timeRangeStartTime_hour').val(fromHour);
                    $('#observation_observationScheduler_timeRangeStartTime_minute').val(fromMinutes);
                    $('#observation_observationScheduler_timeRangeEndTime_hour').val(toHour);
                    $('#observation_observationScheduler_timeRangeEndTime_minute').val(toMinutes);

                    if(isAllDay($range.data("ionRangeSlider"))) {
                        $('#observation_observationScheduler_timeOption').val(0);
                    }
                }
            }

            function isAllDay(data)
            {
                if(data.result.min == data.result.from && data.result.max == data.result.to) {
                    return true;
                };

                return false;
            }
        });

        $('#observation_observationScheduler_startDate').datepicker({
            format: 'yyyy-mm-dd',
            todayHighlight: true
        });

        $('#observation_observationScheduler_repeatEndDate').datepicker({
            format: 'yyyy-mm-dd',
            todayHighlight: true
        });

        $("#observation_observationScheduler_hasDates").bootstrapSwitch('onSwitchChange', function() {
            showHideScheduler();
        });

        $('#observation_observationScheduler_repeatOption').change(function() {
           showHideRepeatOptions();
        });

        $('#observation_observationScheduler_repeatEndOption').change(function() {
           showHideRepeatEndOptions();
        });

        function showHideRepeatOptions() {
            switch ($('#observation_observationScheduler_repeatOption').val()) {
                case '0':
                    $('#observation_observationScheduler_weeklyNumberOfWeeks').parent().parent().hide();
                    $('#observation_observationScheduler_weeklyDaysOfWeek').parent().parent().hide();
                    $('#observation_observationScheduler_repeatEndOption').parent().parent().hide();
                    $('#observation_observationScheduler_repeatEndAfterNumberOfOccurrences').parent().parent().hide();
                    $('#observation_observationScheduler_repeatEndDate').parent().parent().hide();

                    break;

                case '1':
                    $('#observation_observationScheduler_weeklyNumberOfWeeks').parent().parent().show();
                    $('#observation_observationScheduler_weeklyDaysOfWeek').parent().parent().show();
                    $('#observation_observationScheduler_repeatEndOption').parent().parent().show();
                    $('#observation_observationScheduler_repeatEndAfterNumberOfOccurrences').parent().parent().show();

                    break;
            }
        }

        function showHideRepeatEndOptions() {
            if($('#observation_observationScheduler_repeatEndOption').is(":visible")) {
                switch ($('#observation_observationScheduler_repeatEndOption').val()) {
                    case '0':
                        $('#observation_observationScheduler_repeatEndAfterNumberOfOccurrences').parent().parent().show();
                        $('#observation_observationScheduler_repeatEndDate').parent().parent().hide();

                        break;

                    case '1':
                        $('#observation_observationScheduler_repeatEndAfterNumberOfOccurrences').parent().parent().hide();
                        $('#observation_observationScheduler_repeatEndDate').parent().parent().show();

                        break;
                }
            }
        }

        function showHideScheduler() {
            if ($('#observation_observationScheduler_hasDates').prop("checked")) {
                $('#scheduler').show();
            } else {
                $('#scheduler').hide();
            }
        }
    </script>

{% endblock %}

{% block body %}
    {{ form_start(form) }}

    <div class="portlet box green">
    <div class="portlet-title">
        <div class="caption">
            <i class="fa fa-gift"></i>New observation
        </div>

        <div class="actions">
            {{ form_widget(form.base_observation.isSingleCaseDesign) }}
        </div>

    </div>

    <div id="measure-form" class="portlet-body">
        {{ form_row(form.base_observation.name) }}
        {{ form_row(form.base_observation.description) }}
        {{ form_row(form.base_observation.place) }}
        {{ form_row(form.base_observation.setting) }}
        {{ form_row(form.base_observation.measure) }}
        {{ form_row(form.base_observation.observerUsername) }}
        {{ form_row(form.base_observation.observerUserId) }}
        {{ form_row(form.base_observation.fillingInstructions) }}

        <div class="form-group">
            <label class="control-label required col-md-3">Schedule observation dates</label>
            <div class="col-md-9">
                {{ form_widget(form.observationScheduler.hasDates ) }}
            </div>
        </div>

        <div id="scheduler">
            {{ form_row(form.observationScheduler.startDate) }}

            <div class="hidden">
                {{ form_row(form.observationScheduler.timeOption) }}
                {{ form_row(form.observationScheduler.timeRangeStartTime) }}
                {{ form_row(form.observationScheduler.timeRangeEndTime) }}
                {{ form_row(form.observationScheduler.exactTime) }}
            </div>

            <div class="form-group">
                <label class="control-label required col-md-3">Time range</label>
                <div class="col-md-9">
                    <div class="range-slider">
                        <input type="text" class="js-range-slider" value="" />
                    </div>
                </div>
            </div>

            {{ form_row(form.observationScheduler.repeatOption) }}
            {{ form_row(form.observationScheduler.weeklyNumberOfWeeks) }}
            
            <div class="form-body">
                <div class="form-group" style="display: block;">
                    <label class="col-md-3 control-label">Weekly days of week</label>

                    <div id="observation_observationScheduler_weeklyDaysOfWeek" class="col-md-9">
                        <div class="btn-group" data-toggle="buttons">

                                <label class="btn btn-default active" for="observation_observationScheduler_weeklyDaysOfWeek_0"
                                                             class=""><input
                                                class="toggle"
                                                id="observation_observationScheduler_weeklyDaysOfWeek_0"
                                                name="observation[observationScheduler][weeklyDaysOfWeek][]" value="0"
                                                type="checkbox"> Sun</label>
                                <label class="btn btn-default" for="observation_observationScheduler_weeklyDaysOfWeek_1"
                                                             class=""><input
                                                class="toggle"
                                                id="observation_observationScheduler_weeklyDaysOfWeek_1"
                                                name="observation[observationScheduler][weeklyDaysOfWeek][]" value="1"
                                                type="checkbox"> Mon</label>
                                <label class="btn btn-default" for="observation_observationScheduler_weeklyDaysOfWeek_2"
                                                             class=""><input
                                                class="toggle"
                                                id="observation_observationScheduler_weeklyDaysOfWeek_2"
                                                name="observation[observationScheduler][weeklyDaysOfWeek][]" value="2"
                                                type="checkbox"> Tue</label>
                                <label class="btn btn-default" for="observation_observationScheduler_weeklyDaysOfWeek_3"
                                                             class=""><input
                                                class="toggle"
                                                id="observation_observationScheduler_weeklyDaysOfWeek_3"
                                                name="observation[observationScheduler][weeklyDaysOfWeek][]" value="3"
                                                type="checkbox"> Wed</label>
                                <label class="btn btn-default" for="observation_observationScheduler_weeklyDaysOfWeek_4"
                                                             class=""><input
                                                class="toggle"
                                                id="observation_observationScheduler_weeklyDaysOfWeek_4"
                                                name="observation[observationScheduler][weeklyDaysOfWeek][]" value="4"
                                                type="checkbox"> Thu</label>
                                <label class="btn btn-default" for="observation_observationScheduler_weeklyDaysOfWeek_5"
                                                             class=""><input
                                                class="toggle"
                                                id="observation_observationScheduler_weeklyDaysOfWeek_5"
                                                name="observation[observationScheduler][weeklyDaysOfWeek][]" value="5"
                                                type="checkbox"> Fri</label>
                                <label class="btn btn-default" for="observation_observationScheduler_weeklyDaysOfWeek_6"
                                                             class=""><input
                                                class="toggle"
                                                id="observation_observationScheduler_weeklyDaysOfWeek_6"
                                                name="observation[observationScheduler][weeklyDaysOfWeek][]" value="6"
                                                type="checkbox"> Sat</label>

                        </div>
                    </div>
                </div>
            </div>

            {{ form_row(form.observationScheduler.repeatEndOption) }}
            {{ form_row(form.observationScheduler.repeatEndAfterNumberOfOccurrences) }}
            {{ form_row(form.observationScheduler.repeatEndDate) }}

            {{ form_row(form._token) }}



            {{ form_end(form, {'render_rest': false}) }}

    </div>

        <div class="form-actions">
            <div class="row">
                <div class="col-md-offset-3 col-md-9">
                    {{ form_widget(form.base_observation.submit, {'class': 'btn btn-circle green'}) }}
                    <button type="button" class="btn btn-circle grey-salsa btn-outline">Cancel</button>
                </div>
            </div>
        </div>
    </div>

{% endblock %}